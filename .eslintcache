[{"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\App.js":"1","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\index.js":"2","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Apollo\\Client.js":"3","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Apollo\\LocalState.js":"4","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Feed.js":"5","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Styles\\Theme.js":"6","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Button.js":"7","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Input.js":"8","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Footer.js":"9","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Hooks\\useInput.js":"10","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthPresenter.js":"11","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\index.js":"12","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthContainer.js":"13","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthQueries.js":"14","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Header.js":"15","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Icons.js":"16","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Styles\\GlobalStyles.js":"17","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Routes.js":"18","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Explore.js":"19","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Search.js":"20","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Profile.js":"21","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Loader.js":"22","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostContainer.js":"23","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\index.js":"24","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostPresenter.js":"25","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Avatar.js":"26","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\FatText.js":"27","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostQueries.js":"28"},{"size":1162,"mtime":1611050388406,"results":"29","hashOfConfig":"30"},{"size":310,"mtime":1610945224189,"results":"31","hashOfConfig":"30"},{"size":327,"mtime":1611036024400,"results":"32","hashOfConfig":"30"},{"size":580,"mtime":1610947983157,"results":"33","hashOfConfig":"30"},{"size":1262,"mtime":1611051066345,"results":"34","hashOfConfig":"30"},{"size":543,"mtime":1611031637261,"results":"35","hashOfConfig":"30"},{"size":544,"mtime":1610953019710,"results":"36","hashOfConfig":"30"},{"size":890,"mtime":1611031520394,"results":"37","hashOfConfig":"30"},{"size":1898,"mtime":1611038591578,"results":"38","hashOfConfig":"30"},{"size":292,"mtime":1610957667101,"results":"39","hashOfConfig":"30"},{"size":2273,"mtime":1611029507867,"results":"40","hashOfConfig":"30"},{"size":75,"mtime":1610961048544,"results":"41","hashOfConfig":"30"},{"size":3998,"mtime":1611029994433,"results":"42","hashOfConfig":"30"},{"size":764,"mtime":1611030123654,"results":"43","hashOfConfig":"30"},{"size":2593,"mtime":1611056105841,"results":"44","hashOfConfig":"30"},{"size":4269,"mtime":1611050009525,"results":"45","hashOfConfig":"30"},{"size":753,"mtime":1611052609081,"results":"46","hashOfConfig":"30"},{"size":941,"mtime":1611050630031,"results":"47","hashOfConfig":"30"},{"size":31,"mtime":1610941922078,"results":"48","hashOfConfig":"30"},{"size":30,"mtime":1611034536343,"results":"49","hashOfConfig":"30"},{"size":31,"mtime":1611034528574,"results":"50","hashOfConfig":"30"},{"size":1028,"mtime":1611045004647,"results":"51","hashOfConfig":"30"},{"size":3038,"mtime":1611056322489,"results":"52","hashOfConfig":"30"},{"size":77,"mtime":1611047793731,"results":"53","hashOfConfig":"30"},{"size":2774,"mtime":1611056187911,"results":"54","hashOfConfig":"30"},{"size":792,"mtime":1611049901126,"results":"55","hashOfConfig":"30"},{"size":305,"mtime":1611056110030,"results":"56","hashOfConfig":"30"},{"size":376,"mtime":1611056219656,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"ufxh88",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"67"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"67"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\App.js",["129"],"import React from \"react\";\nimport { gql } from \"apollo-boost\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport GlobalStyles from \"../Styles/GlobalStyles\";\nimport Theme from \"../Styles/Theme\";\nimport Routes from \"./Routes\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst QUERY = gql`\n  {\n    isLoggedIn @client\n  }\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: ${props => props.theme.maxWidth};\n  width: 100%;\n`;\n\nexport default () => {\n  const {\n    data: { isLoggedIn }\n  } = useQuery(QUERY);\n\n  return (\n    <ThemeProvider theme={Theme}>\n      <>\n        <GlobalStyles />\n        <Router>\n          <>\n            {isLoggedIn && <Header />}\n            <Wrapper>\n              <Routes isLoggedIn={isLoggedIn} />\n              <Footer />\n            </Wrapper>\n          </>\n        </Router>\n        <ToastContainer position={toast.POSITION.BOTTOM_LEFT} />\n      </>\n    </ThemeProvider>\n  );\n};",["130","131"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\index.js",[],["132","133"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Apollo\\Client.js",[],["134","135"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Apollo\\LocalState.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Feed.js",["136","137"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"rl-react-helmet\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from \"react-apollo-hooks\";\r\nimport Loader from \"../Components/Loader\";\r\nimport Post from \"../Components/Post\";\r\n\r\n\r\nconst FEED_QUERY = gql`\r\n  {\r\n    seeFeed {\r\n      id\r\n      location\r\n      caption\r\n      user {\r\n        id\r\n        avatar\r\n        username\r\n      }\r\n      files {\r\n        id\r\n        url\r\n      }\r\n      likeCount\r\n      isLiked\r\n      comments {\r\n        id\r\n        text\r\n        user {\r\n          id\r\n          username\r\n        }\r\n      }\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 65vh;\r\n`;\r\n\r\nexport default () => {\r\n  const { data, loading } = useQuery(FEED_QUERY);\r\n  return <Wrapper>\r\n    {loading && <Loader />}\r\n    {!loading && data && data.seeFeed && data.seeFeed.map(\r\n      post => <Post\r\n        key={post.id}\r\n        id={post.id}\r\n        user={post.user}\r\n        files={post.files}\r\n        likeCount={post.likeCount}\r\n        isLiked={post.isLiked}\r\n        comments={post.comments}\r\n        createdAt={post.createdAt}\r\n      />)}</Wrapper>;\r\n};","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Styles\\Theme.js",["138"],"const BOX_BORDER = \"1px solid #e6e6e6\";\r\nconst BORDER_RADIUS = \"4px\";\r\n\r\nexport default {\r\n    maxWidth: \"935px\",\r\n    bgColor: \"#FAFAFA\",\r\n    blackColor: \"#262626\",\r\n    darkGreyColor: \"#999\",\r\n    lightGreyColor: \"#c7c7c7\",\r\n    starColor: \"#F2CE5A\",\r\n    navyColor: \"#364152\",\r\n    brownColor: \"#B3795D\",\r\n    boxBorder: \"1px solid #e6e6e6\",\r\n    ivoryColor: \"#DB937B\",\r\n    borderRadius: \"4px\",\r\n    whiteBox: `\r\n    border:${BOX_BORDER};\r\n            border-radius:${BORDER_RADIUS};\r\n            background-color:white;\r\n            `\r\n}","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Button.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Input.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Footer.js",["139"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Hooks\\useInput.js",["140"],"import { useState } from 'react';\r\n\r\nexport default (defaultvalue) => {\r\n    const [value, setvalue] = useState(defaultvalue);\r\n\r\n    const onChange = e => {\r\n        const {\r\n            target: { value }\r\n        } = e;\r\n        setvalue(value);\r\n    };\r\n    return { value, onChange };\r\n};","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthPresenter.js",["141"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Input from \"../../Components/Input\";\r\nimport Button from \"../../Components/Button\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 80vh;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  ${props => props.theme.whiteBox}\r\n  border-radius:0px;\r\n  width: 100%;\r\n  max-width: 350px;\r\n`;\r\n\r\nconst StateChanger = styled(Box)`\r\n  text-align: center;\r\n  padding: 20px 0px;\r\n`;\r\n\r\nconst Link = styled.span`\r\n  color: ${props => props.theme.ivoryColor};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Form = styled(Box)`\r\n  padding: 40px;\r\n  padding-bottom: 30px;\r\n  margin-bottom: 15px;\r\n  form {\r\n    width: 100%;\r\n    input {\r\n      width: 100%;\r\n      &:not(:last-child) {\r\n        margin-bottom: 7px;\r\n      }\r\n    }\r\n    button {\r\n      margin-top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  action,\r\n  username,\r\n  firstName,\r\n  lastName,\r\n  email,\r\n  setAction,\r\n  secret,\r\n  onSubmit\r\n}) => (\r\n  <Wrapper>\r\n    <Form>\r\n      {action === \"logIn\" && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n          <Button text={\"Log in\"} />\r\n        </form>\r\n      )}{ action === 'signUp' && (\r\n        <form onSubmit={onSubmit}>\r\n          <Input placeholder={\"First name\"} {...firstName} />\r\n          <Input placeholder={\"Last name\"} {...lastName} />\r\n          <Input placeholder={\"Email\"} {...email} type=\"email\" />\r\n          <Input placeholder={\"Username\"} {...username} />\r\n          <Button text={\"Sign up\"} />\r\n        </form>\r\n      )}\r\n      {action === 'confirm' && <form onSubmit={onSubmit}>\r\n        <Input placeholder=\"전송된 값을 입력해주세요!\" required {...secret} />\r\n        <Button text={'Confirm'} />\r\n        </form>\r\n        }\r\n    </Form>\r\n    {action !== 'confirm' && (\r\n      <StateChanger>\r\n      {action === \"logIn\" ? (\r\n        <>\r\n          Don't have an account?{\" \"}\r\n          <Link onClick={() => setAction(\"signUp\")}>Sign up</Link>\r\n        </>\r\n      ) : (\r\n        <>\r\n          Have an account?{\" \"}\r\n          <Link onClick={() => setAction(\"logIn\")}>Log in</Link>\r\n        </>\r\n      )}\r\n    </StateChanger>)}\r\n  </Wrapper>\r\n);","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\index.js",[],["142","143"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthContainer.js",["144"],"import React, { useState } from \"react\";\r\nimport AuthPresenter from \"./AuthPresenter\";\r\nimport useInput from \"../../Hooks/useInput\";\r\nimport { useMutation } from \"react-apollo-hooks\";\r\nimport { LOG_IN, CREATE_ACCOUNT, CONFIRM_SECRET, LOG_USER_IN } from \"./AuthQueries\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default () => {\r\n    const [action, setAction] = useState(\"logIn\");\r\n    const username = useInput(\"\");\r\n    const firstName = useInput(\"\");\r\n    const secret = useInput(\"\");\r\n    const lastName = useInput(\"\");\r\n    const email = useInput(\"\");\r\n    const [requestSecretMutation] = useMutation(LOG_IN, {\r\n        variables: { email: email.value }\r\n    });\r\n    const [createAccountMutation] = useMutation(CREATE_ACCOUNT, {\r\n        variables: {\r\n            email: email.value,\r\n            username: username.value,\r\n            firstName: firstName.value,\r\n            lastName: lastName.value\r\n        }\r\n    });\r\n\r\n    const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\r\n        variables: {\r\n            email: email.value,\r\n            secret: secret.value\r\n        }\r\n    });\r\n\r\n    const [logUserInMutation] = useMutation(LOG_USER_IN)\r\n\r\n    const onSubmit = async e => {\r\n        e.preventDefault();\r\n        if (action === \"logIn\") {\r\n            if (email.value !== \"\") {\r\n                try {\r\n                    const { data: { requestSecret } } = await requestSecretMutation();\r\n                    if (!requestSecret) {\r\n                        toast.error(\"Woops!, 등록된 정보가 없어요! 회원가입으로 안내해 드릴게요!\");\r\n                        setTimeout(() => setAction(\"signUp\"), 3000);\r\n                    } else {\r\n                        toast.success('이메일함에서 시크릿 코드를 확인해주세요!')\r\n                        setAction('confirm');\r\n                    }\r\n                } catch {\r\n                    toast.error(\"Woops!, 다시 시도해주세요!\");\r\n                }\r\n            } else {\r\n                toast.error(\"이메일은 반드시 작성해야해요!\");\r\n            }\r\n        } else if (action === \"signUp\") {\r\n            if (\r\n                email.value !== \"\" &&\r\n                username.value !== \"\" &&\r\n                firstName.value !== \"\" &&\r\n                lastName.value !== \"\"\r\n            ) {\r\n                try {\r\n                    const { data: { createAccount } } = await createAccountMutation();\r\n                    if (!createAccount) {\r\n                        toast.error(\"Woops! 잠시만요! 다시 시도해주세요!\");\r\n                    } else {\r\n                        toast.success(\"환영해요! 당신만을 기다렸어요!\");\r\n                        setTimeout(() => setAction(\"logIn\"), 3000);\r\n                    }\r\n                } catch (e) {\r\n                    toast.error(e.message);\r\n                }\r\n            } else {\r\n                toast.error(\"모든 양식을 작성해 주세요!\");\r\n            }\r\n        } else if (action === \"confirm\") {\r\n            if (secret.value !== \"\") {\r\n                try {\r\n                    const { data: { confirmSecret: token } } = await confirmSecretMutation();\r\n                    if (token !== \"\" && token !== undefined) {\r\n                        await logUserInMutation({ variables: { token } });\r\n                    } else {\r\n                        console.log(token)\r\n                        throw Error();\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error);\r\n                    toast.error('Woops! 비밀코드가 일치하지 않아요!');\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <AuthPresenter\r\n            setAction={setAction}\r\n            action={action}\r\n            username={username}\r\n            firstName={firstName}\r\n            lastName={lastName}\r\n            email={email}\r\n            secret={secret}\r\n            onSubmit={onSubmit}\r\n        />\r\n    );\r\n};",["145","146"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Auth\\AuthQueries.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Header.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Icons.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Styles\\GlobalStyles.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Routes.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Explore.js",["147"],"export default () => \"Explore\";","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Search.js",["148"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Routes\\Profile.js",["149"],"export default () => \"profile\";","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Loader.js",["150"],"import React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Loding } from \"./Icons\";\r\n\r\nconst loadingCircleAni = keyframes`\r\n   0% { stroke-dashoffset: 157; }\r\n   75% { stroke-dashoffset: -147; }\r\n   100% { stroke-dashoffset: -157; }\r\n`;\r\n\r\nconst loadingSpin = keyframes`\r\n    100% { transform: rotate(360deg); }\r\n`;\r\n\r\n\r\nconst LoadingCircle = styled(Loding)`\r\n    width: 54px;\r\n   height: 54px;\r\n\r\n`;\r\n\r\nconst CssLoading = styled.div`\r\n    display: flex;\r\n   align-items: center;\r\n   justify-content: center;\r\n   position: fixed;\r\n   top: 0;\r\n   right: 0;\r\n   bottom: 0;\r\n   left: 0;\r\n   z-index: 100;\r\n    animation: ${loadingSpin} 3s infinite;\r\n`;\r\n\r\nconst Animation = styled.div`\r\n    stroke: black;\r\n   stroke-width: 4;\r\n   stroke-dasharray: 157;\r\n   stroke-dashoffset: 0;\r\n   fill: transparent;\r\n   animation: ${loadingCircleAni} 1s infinite;\r\n`;\r\n\r\n\r\nexport default () => (\r\n    <Animation>\r\n        <CssLoading>\r\n            <LoadingCircle />\r\n        </CssLoading>\r\n    </Animation>\r\n);","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostContainer.js",["151","152"],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\index.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostPresenter.js",["153"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport TextareaAutosize from \"react-autosize-textarea\";\r\nimport FatText from \"../FatText\";\r\nimport Avatar from \"../Avatar\";\r\nimport { HeartFull, HeartEmpty, Comment } from \"../Icons\";\r\n\r\nconst Post = styled.div`\r\n  ${props => props.theme.whiteBox};\r\n  width: 100%;\r\n  max-width: 600px;\r\n  user-select: none;\r\n  margin-bottom: 25px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserColumn = styled.div`\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Location = styled.span`\r\n  display: block;\r\n  margin-top: 5px;\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Files = styled.div`\r\n  position: relative;\r\n  padding-bottom: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  flex-shrink: 0;\r\n`;\r\n\r\nconst File = styled.div`\r\n  max-width: 100%;\r\n  width: 100%;\r\n  height: 600px;\r\n  position: absolute;\r\n  top: 0;\r\n  background-image: url(${props => props.src});\r\n  background-size: cover;\r\n  background-position: center;\r\n  opacity: ${props => (props.showing ? 1 : 0)};\r\n  transition: opacity 0.5s linear;\r\n`;\r\n\r\nconst Button = styled.span`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Meta = styled.div`\r\n  padding: 15px;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  ${Button} {\r\n    &:first-child {\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Timestamp = styled.span`\r\n  font-weight: 400;\r\n  text-transform: uppercase;\r\n  opacity: 0.5;\r\n  display: block;\r\n  font-size: 12px;\r\n  margin: 10px 0px;\r\n  padding-bottom: 10px;\r\n  border-bottom: ${props => props.theme.lightGreyColor} 1px solid;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  border: none;\r\n  width: 100%;\r\n  resize: none;\r\n  font-size: 14px;\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport default ({\r\n  user: { username, avatar },\r\n  location,\r\n  files,\r\n  isLiked,\r\n  likeCount,\r\n  createdAt,\r\n  newComment,\r\n  currentItem,\r\n  toggleLike\r\n}) => (\r\n  <Post>\r\n    <Header>\r\n      <Avatar size=\"sm\" url={avatar} />\r\n      <UserColumn>\r\n        <FatText text={username} />\r\n        <Location>{location}</Location>\r\n      </UserColumn>\r\n    </Header>\r\n    <Files>\r\n      {files &&\r\n        files.map((file, index) => (\r\n          <File key={file.id} src={file.url} showing={index === currentItem} />\r\n        ))}\r\n    </Files>\r\n    <Meta>\r\n      <Buttons>\r\n        <Button onClick={toggleLike}>\r\n          {isLiked ? <HeartFull /> : <HeartEmpty />}\r\n        </Button>\r\n        <Button>\r\n          <Comment />\r\n        </Button>\r\n      </Buttons>\r\n      <FatText text={likeCount === 1 ? \"1 like\" : `${likeCount} likes`} />\r\n      <Timestamp>{createdAt}</Timestamp>\r\n      <Textarea placeholder={\"Add a comment...\"} {...newComment} />\r\n    </Meta>\r\n  </Post>\r\n);","C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Avatar.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\FatText.js",[],"C:\\Users\\GG\\Documents\\finalproject\\semicolon_frontend\\src\\Components\\Post\\PostQueries.js",[],{"ruleId":"154","severity":1,"message":"155","line":26,"column":1,"nodeType":"156","endLine":48,"endColumn":3},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"157","replacedBy":"161"},{"ruleId":"159","replacedBy":"162"},{"ruleId":"157","replacedBy":"163"},{"ruleId":"159","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":47,"column":1,"nodeType":"156","endLine":62,"endColumn":3},{"ruleId":"154","severity":1,"message":"169","line":4,"column":1,"nodeType":"156","endLine":21,"endColumn":2},{"ruleId":"154","severity":1,"message":"155","line":37,"column":1,"nodeType":"156","endLine":76,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":3,"column":1,"nodeType":"156","endLine":13,"endColumn":3},{"ruleId":"154","severity":1,"message":"155","line":49,"column":1,"nodeType":"156","endLine":96,"endColumn":3},{"ruleId":"157","replacedBy":"170"},{"ruleId":"159","replacedBy":"171"},{"ruleId":"154","severity":1,"message":"155","line":8,"column":1,"nodeType":"156","endLine":106,"endColumn":3},{"ruleId":"157","replacedBy":"172"},{"ruleId":"159","replacedBy":"173"},{"ruleId":"154","severity":1,"message":"155","line":1,"column":1,"nodeType":"156","endLine":1,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":1,"column":1,"nodeType":"156","endLine":1,"endColumn":31},{"ruleId":"154","severity":1,"message":"155","line":1,"column":1,"nodeType":"156","endLine":1,"endColumn":32},{"ruleId":"154","severity":1,"message":"155","line":45,"column":1,"nodeType":"156","endLine":51,"endColumn":3},{"ruleId":"165","severity":1,"message":"174","line":26,"column":11,"nodeType":"167","messageId":"168","endLine":26,"endColumn":29},{"ruleId":"175","severity":1,"message":"176","line":39,"column":8,"nodeType":"177","endLine":39,"endColumn":21,"suggestions":"178"},{"ruleId":"154","severity":1,"message":"155","line":92,"column":1,"nodeType":"156","endLine":131,"endColumn":3},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-native-reassign",["179"],"no-negated-in-lhs",["180"],["179"],["180"],["179"],["180"],"no-unused-vars","'Helmet' is defined but never used.","Identifier","unusedVar","Assign object to a variable before exporting as module default",["179"],["180"],["179"],["180"],"'addCommentMutation' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'slide'. Either include it or remove the dependency array.","ArrayExpression",["181"],"no-global-assign","no-unsafe-negation",{"desc":"182","fix":"183"},"Update the dependencies array to be: [currentItem, slide]",{"range":"184","text":"185"},[1213,1226],"[currentItem, slide]"]